const router = require("express").Router();
const asyncHandler = require("express-async-handler");
const { YourAlbum, Song } = require("../../db/models");
console.log("YourAlbum model:", YourAlbum); 
router.get(
    "/:userId",
    asyncHandler(async (req, res) => {
      const { userId } = req.params;
  
      // L·∫•y danh s√°ch songId t·ª´ YourAlbum
      const userAlbums = await YourAlbum.findAll({
        where: { userId },
        attributes: ["songId"],
      });
  
      if (!userAlbums.length) {
        return res.status(404).json({ error: "Album c·ªßa b·∫°n kh√¥ng c√≥ b√†i h√°t n√†o." });
      }
  
      // L·∫•y danh s√°ch b√†i h√°t d·ª±a tr√™n songId
      const songIds = userAlbums.map((entry) => entry.songId);
      const songs = await Song.findAll({
        where: { id: songIds },
        attributes: ["id", "title", "artist", "genre", "audioFile", "imgUrl", "album"],
      });
  
      return res.json({ userId, songs });
    })
  );
// üìå Th√™m b√†i h√°t v√†o album c·ªßa ng∆∞·ªùi d√πng
router.post(
  "/",
  asyncHandler(async (req, res) => {
    const { userId, songId } = req.body;

    // Ki·ªÉm tra ƒë·∫ßu v√†o h·ª£p l·ªá
    if (!userId || !songId) {
      return res.status(400).json({ error: "userId v√† songId l√† b·∫Øt bu·ªôc." });
    }

    // Ki·ªÉm tra xem b√†i h√°t c√≥ t·ªìn t·∫°i kh√¥ng
    const song = await Song.findByPk(songId);
    if (!song) {
      return res.status(404).json({ error: "B√†i h√°t kh√¥ng t·ªìn t·∫°i." });
    }

    // Ki·ªÉm tra xem b√†i h√°t ƒë√£ c√≥ trong album ch∆∞a
    const existingEntry = await YourAlbum.findOne({
      where: { userId, songId },
    });

    if (existingEntry) {
      return res.status(409).json({ error: "B√†i h√°t ƒë√£ c√≥ trong album." });
    }

    // Th√™m b√†i h√°t v√†o album
    const newEntry = await YourAlbum.create({ userId, songId });
    return res.status(201).json({ message: "ƒê√£ th√™m b√†i h√°t v√†o album.", newEntry });
  })
);

// üìå X√≥a b√†i h√°t kh·ªèi album c·ªßa ng∆∞·ªùi d√πng
router.delete(
  "/",
  asyncHandler(async (req, res) => {
    const { userId, songId } = req.body;

    // Ki·ªÉm tra ƒë·∫ßu v√†o h·ª£p l·ªá
    if (!userId || !songId) {
      return res.status(400).json({ error: "userId v√† songId l√† b·∫Øt bu·ªôc." });
    }

    // Ki·ªÉm tra xem b√†i h√°t c√≥ trong album kh√¥ng
    const albumEntry = await YourAlbum.findOne({ where: { userId, songId } });

    if (!albumEntry) {
      return res.status(404).json({ error: "B√†i h√°t kh√¥ng t·ªìn t·∫°i trong album." });
    }

    // X√≥a b√†i h√°t kh·ªèi album
    await albumEntry.destroy();
    return res.json({ message: "ƒê√£ x√≥a b√†i h√°t kh·ªèi album." });
  })
);

module.exports = router;
